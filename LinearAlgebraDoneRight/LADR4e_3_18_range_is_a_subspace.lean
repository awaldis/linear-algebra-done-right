------------------------------------------------------
-- 3.18 - the range is a subspace
-- In order to be a subspace of W, the range of T must follow these three
-- conditions:
-- rangeT contains additive identity (clearly follows from theorem 3.10)
-- rangeT closed under addition (shown below)
-- rangeT closed under scalar multiplication (shown below)
------------------------------------------------------
import Mathlib.Algebra.Module.Basic
import Mathlib.Algebra.Module.LinearMap.Defs

variable {ùîΩ : Type*} [Field ùîΩ]
variable {V : Type*} [AddCommGroup V] [Module ùîΩ V]
variable {W : Type*} [AddCommGroup W] [Module ùîΩ W]
variable (T : V ‚Üí‚Çó[ùîΩ] W)

------------------------------------------------------
-- rangeT closed under addition
------------------------------------------------------
example (w‚ÇÅ w‚ÇÇ : W) : w‚ÇÅ ‚àà {w | ‚àÉ v, T v = w} ‚Üí
                      w‚ÇÇ ‚àà {w | ‚àÉ v, T v = w} ‚Üí
                 w‚ÇÅ + w‚ÇÇ ‚àà {w | ‚àÉ v, T v = w} := by
  intro h_w‚ÇÅ_in_range_of_T
  intro h_w‚ÇÇ_in_range_of_T
  rcases h_w‚ÇÅ_in_range_of_T with ‚ü®v‚ÇÅ, h_Tv‚ÇÅ_produces_w‚ÇÅ‚ü©
  rcases h_w‚ÇÇ_in_range_of_T with ‚ü®v‚ÇÇ, h_Tv‚ÇÇ_produces_w‚ÇÇ‚ü©
  use v‚ÇÅ + v‚ÇÇ
  -- New Goal: T (v‚ÇÅ + v‚ÇÇ) = w‚ÇÅ + w‚ÇÇ
  calc T (v‚ÇÅ + v‚ÇÇ)
    = T v‚ÇÅ + T v‚ÇÇ := by rw [LinearMap.map_add]
    _ = w‚ÇÅ + T v‚ÇÇ := by rw [h_Tv‚ÇÅ_produces_w‚ÇÅ]
    _ = w‚ÇÅ + w‚ÇÇ   := by rw [h_Tv‚ÇÇ_produces_w‚ÇÇ]
  -- Since (T (v‚ÇÅ + v‚ÇÇ) ‚àà range T)) and T (v‚ÇÅ + v‚ÇÇ) = w‚ÇÅ + w‚ÇÇ
  -- then (w‚ÇÅ + w‚ÇÇ) ‚àà range T

------------------------------------------------------
-- rangeT closed under scalar multiplication
------------------------------------------------------
example (c : ùîΩ) (w : W) : w ‚àà {w | ‚àÉ v, T v = w} ‚Üí
                      c ‚Ä¢ w ‚àà {w | ‚àÉ v, T v = w} := by
  intro h_w_in_range_of_T
  rcases h_w_in_range_of_T with ‚ü®v, h_Tv_produces_w‚ü©
  use c ‚Ä¢ v
  -- New Goal: T (c ‚Ä¢ v) = c ‚Ä¢ w
  calc T (c ‚Ä¢ v)
      = c ‚Ä¢ T v := by rw [LinearMap.map_smul]
    _ = c ‚Ä¢ w   := by rw [h_Tv_produces_w]
  -- Since (T (c ‚Ä¢ v)) ‚àà range T)) and T (c ‚Ä¢ v)) = c ‚Ä¢ w
  -- then (c ‚Ä¢ w)) ‚àà range T
